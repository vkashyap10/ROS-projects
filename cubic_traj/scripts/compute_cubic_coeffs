#!/usr/bin/env python

# This is the service node which calculates the coefficients of a cubic trajectory given initial position, final position, initial velocity, final velocity, initial time and final time.

from __future__ import print_function

from ar_week5_test.srv import compute_cubic_traj, compute_cubic_trajResponse
import rospy
import numpy as np

def handle_compute_cubic_coeffs(req):
    # compute the coefficients using matrix inversion
    # equation Ma = c
    c = np.array([req.p0, req.v0, req.pf, req.vf])
    M = np.array([ [1, req.t0, (req.t0)**2, (req.t0)**3],
        [0, 1, 2*req.t0, 3*(req.t0)**2],
        [1, req.tf, (req.tf)**2, (req.tf)**3], 
        [0, 1, 2*req.tf, 3*(req.tf)**2] ])

    a = np.matmul(np.linalg.inv(M),c)
    
    # intialise response object for service
    resp1 = compute_cubic_trajResponse()
    resp1.a0 = a[0]
    resp1.a1 = a[1]
    resp1.a2 = a[2]
    resp1.a3 = a[3]
    return resp1

def compute_cubic_coeffs_server():
    # initialising the node
    rospy.init_node('compute_cubic_coeffs')
    # starting compute cubic traj service with callback function handle_compute_cubic_coeffs
    s = rospy.Service('compute_cubic_traj_1', compute_cubic_traj, handle_compute_cubic_coeffs)
    print("Ready to calculate coeffs.")
    # prevent the node from exiting
    rospy.spin()

if __name__ == "__main__":
    compute_cubic_coeffs_server()

